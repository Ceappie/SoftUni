import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Date;
import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

public class P5_CardsPDF {
	private static String FILE = "FirstPdf.pdf";
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
			Font.BOLD);
	private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
			Font.NORMAL, BaseColor.RED);

	public static void main(String[] args) {
		try {
			Document document = new Document();
			PdfWriter.getInstance(document, new FileOutputStream(FILE));
			document.open();
			addContent(document);
			document.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private static void addTitlePage(Document document)
		      throws DocumentException {
		    Paragraph preface = new Paragraph();
		    // We add one empty line
		    addEmptyLine(preface, 1);
		    // Lets write a big header
		    preface.add(new Paragraph("Title of the document", catFont));

		    addEmptyLine(preface, 1);
		    // Will create: Report generated by: _name, _date
		    preface.add(new Paragraph("Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
		        smallBold));
		    addEmptyLine(preface, 3);
		    preface.add(new Paragraph("This document describes something which is very important ",
		        smallBold));

		    addEmptyLine(preface, 8);

		    preface.add(new Paragraph("This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
		        redFont));

		    document.add(preface);
		    // Start a new page
		    document.newPage();
		  }

	private static void addContent(Document document) throws DocumentException {
		Anchor anchor = new Anchor("First Chapter", catFont);
	    anchor.setName("First Chapter");

	    // Second parameter is the number of the chapter
	    Chapter catPart = new Chapter(new Paragraph(anchor), 1);

	    Paragraph subPara = new Paragraph("Subcategory 1", catFont);
	    Section subCatPart = catPart.addSection(subPara);
	    
		
		
		
		char[] sets = { '\u2660', '\u2665', '\u2666', '\u2663' };

		for (int suits = 0; suits < 4; suits++) {
			for (int cards = 1; cards <= 13; cards++) {
				String card = "";
				switch (cards) {
				case 1:
					card = 'A' + " " + sets[suits];
					break;
				case 11:
					card = 'J' + " " + sets[suits];
					break;
				case 12:
					card = 'Q' + " " + sets[suits];
					break;
				case 13:
					card = 'K' + " " + sets[suits];
					break;
				default:
					card = cards + " " + sets[suits];
					break;
				}
				subCatPart.add(new Paragraph(card));
			}
		}
	}

	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}
}
