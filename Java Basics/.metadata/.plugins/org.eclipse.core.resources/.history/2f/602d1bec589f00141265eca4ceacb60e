import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Date;
import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class P5_CardsPDF {
		  private static String FILE = "FirstPdf.pdf";
		  private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
		      Font.BOLD);
		  private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
		      Font.NORMAL, BaseColor.RED);

		  public static void main(String[] args) {
		    try {
		      Document document = new Document();
		      PdfWriter.getInstance(document, new FileOutputStream(FILE));
		      document.open();
		      addContent(document);
		      document.close();
		    } catch (Exception e) {
		      e.printStackTrace();
		    }
		  }

		  // iText allows to add metadata to the PDF which can be viewed in your Adobe
		  // Reader
		  // under File -> Properties


		  private static void addContent(Document document) throws DocumentException {
		    Anchor anchor = new Anchor("First Chapter", catFont);
		    anchor.setName("First Chapter");

		    // Second parameter is the number of the chapter
		    Chapter catPart = new Chapter(new Paragraph(anchor), 1);

		    Paragraph subPara = new Paragraph("Subcategory 1", catFont);
		    Section subCatPart = catPart.addSection(subPara);
		    subCatPart.add(new Paragraph("Hello"));

		    subPara = new Paragraph("Subcategory 2", catFont);
		    subCatPart = catPart.addSection(subPara);
		    subCatPart.add(new Paragraph("Paragraph 1"));
		    subCatPart.add(new Paragraph("Paragraph 2"));
		    subCatPart.add(new Paragraph("Paragraph 3"));


		    // add a table
		    createTable(subCatPart);

		    // now add all this to the document
		    document.add(catPart);


		  }

		  private static void createTable(Section subCatPart)
		      throws BadElementException {
		    PdfPTable table = new PdfPTable(3);

		    // t.setBorderColor(BaseColor.GRAY);
		    // t.setPadding(4);
		    // t.setSpacing(4);
		    // t.setBorderWidth(1);

		    PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    table.addCell(c1);

		    c1 = new PdfPCell(new Phrase("Table Header 2"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    table.addCell(c1);

		    c1 = new PdfPCell(new Phrase("Table Header 3"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    table.addCell(c1);
		    table.setHeaderRows(1);

		    table.addCell("1.0");
		    table.addCell("1.1");
		    table.addCell("1.2");
		    table.addCell("2.1");
		    table.addCell("2.2");
		    table.addCell("2.3");

		    subCatPart.add(table);

		  }


		  private static void addEmptyLine(Paragraph paragraph, int number) {
		    for (int i = 0; i < number; i++) {
		      paragraph.add(new Paragraph(" "));
		    }
		  }

//		public static void main(String[] args) throws FileNotFoundException {
//		
//		char[] sets = {'\u2660', '\u2665', '\u2666', '\u2663'};
//		
//		for (int suits = 0; suits < 4; suits++) {
//			for (int cards = 1; cards <= 13; cards++) {
//				String card = "";
//				switch (cards) {
//				case 1:
//					card = 'A' + " " + sets[suits];
//					break;
//				case 11:
//					card = 'J' + " " + sets[suits];
//					break;
//				case 12:
//					card = 'Q' + " " + sets[suits];
//					break;
//				case 13:
//					card = 'K' + " " + sets[suits];
//					break;
//				default:
//					card = cards + " " + sets[suits];
//					break;
//				}
//				System.out.println(card);
//			}
//		}

	}

