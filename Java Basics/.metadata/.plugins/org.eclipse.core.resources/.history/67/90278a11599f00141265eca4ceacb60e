import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Date;
import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class P5_CardsPDF {
		  private static String FILE = "FirstPdf.pdf";
		  private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
		      Font.BOLD);
		  private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
		      Font.NORMAL, BaseColor.RED);

		  public static void main(String[] args) {
		    try {
		      Document document = new Document();
		      PdfWriter.getInstance(document, new FileOutputStream(FILE));
		      document.open();
		      addContent(document);
		      document.close();
		    } catch (Exception e) {
		      e.printStackTrace();
		    }
		  }

		  private static void addContent(Document document) throws DocumentException {
			  char[] sets = {'\u2660', '\u2665', '\u2666', '\u2663'};
				
				for (int suits = 0; suits < 4; suits++) {
					for (int cards = 1; cards <= 13; cards++) {
						String card = "";
						switch (cards) {
						case 1:
							card = 'A' + " " + sets[suits];
							break;
						case 11:
							card = 'J' + " " + sets[suits];
							break;
						case 12:
							card = 'Q' + " " + sets[suits];
							break;
						case 13:
							card = 'K' + " " + sets[suits];
							break;
						default:
							card = cards + " " + sets[suits];
							break;
						}
						System.out.println(card);
					}
				}
		  }


		  private static void addEmptyLine(Paragraph paragraph, int number) {
		    for (int i = 0; i < number; i++) {
		      paragraph.add(new Paragraph(" "));
		    }
		  }
	}

