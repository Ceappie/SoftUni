import java.math.BigInteger;
import java.util.Scanner;


public class P5_BitFlipper {

	public static void main(String[] args) {
//		long number = 594226797558350599L;
		Scanner input = new Scanner(System.in);
		long number = input.nextLong();
		
		long mask = 7L;
		for (int bit = 63; bit >= 0 ; bit--) {
			long currentBits = (number >> bit) & mask;
			if (currentBits == 0 && bit < 62) {
				number = number | (mask << bit);
				bit -= 2;
			}
			else if (currentBits == mask) {
				number = number & ~(mask << bit);
				bit -= 2;
			}
		}
//		System.out.println(Long.toBinaryString(number));
//		System.out.println("1110111100000000111000111100000001111111000010000111101111100000");
		//Turn 64th bit to 0, so it can be accurate as long;
		number = number & ~(1L << 63);
		System.out.println(Long.toBinaryString(number));
		
		System.out.println(number);
	}

}
